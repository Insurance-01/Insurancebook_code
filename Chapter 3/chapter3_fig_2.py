# -*- coding: utf-8 -*-
"""shakti_chapter3.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/15A8J-2TVdgb8sk_26HWMiXMVqr2rc24T
"""

import matplotlib.pyplot as plt
import numpy as np
from scipy.interpolate import make_interp_spline

# x-axis range
x = np.linspace(1.10, 1.30, 100)

# Green (Age 65)
y1 = np.piecewise(x,
    [x < 1.16, (x >= 1.16) & (x <= 1.17), x > 1.17],
    [lambda x: (x-1.10)*2000, lambda x: (1.17-x)*9000, 0])

# Red (Age 71)
y2 = np.piecewise(x,
    [x < 1.18, (x >= 1.18) & (x <= 1.26), x > 1.26],
    [0, lambda x: (x - 1.18)**2 * 30000, 0])

# Blue (Age 77) â€” adjusted to be convex and stay under the others
x3_points = np.array([1.18, 1.20, 1.22, 1.24, 1.26, 1.28])
y3_points = np.array([0, 10, 20, 35, 50, 65])  # smaller, smooth convex values

# Spline interpolation
spline = make_interp_spline(x3_points, y3_points, k=3)
x3_smooth = np.linspace(1.18, 1.28, 200)
y3_smooth = spline(x3_smooth)

# Plotting
plt.figure(figsize=(10, 6))
plt.plot(x, y1, 'g-', label='Age 65')            # green solid line
plt.plot(x, y2, 'r--', linewidth=2, label='Age 71')  # red dashed line
plt.plot(x3_smooth, y3_smooth, 'b:', linewidth=2, label='Age 77')  # blue dotted line

plt.xlabel('shift parameter ($)')
plt.ylabel('fee (basis points)')
plt.legend(loc='upper right')
plt.tight_layout()
plt.show()

import matplotlib.pyplot as plt
import numpy as np

# x-axis (shift parameter)
x = np.linspace(1, 5, 30)

# Simulated EPV values for each age group (can be adjusted to fit actual data better)
y65 = 30 * x + 60                # green solid, Age 65
y71 = 60 * x + 210               # blue dashed with markers, Age 71
y77 = 65 * x + 190               # red dotted, Age 77

# Plotting
plt.figure(figsize=(10, 6))
plt.plot(x, y65, 'g-', label='Age 65')                  # Green solid line
plt.plot(x, y71, 'b--o', label='Age 71', markevery=2)   # Blue dashed with circle markers
plt.plot(x, y77, 'r:', label='Age 77')                  # Red dotted line

# Labels and formatting
plt.xlabel('shift parameter ($)')
plt.ylabel('EPV ($)')
plt.legend(loc='upper right')
plt.grid(False)
plt.tight_layout()
plt.show()